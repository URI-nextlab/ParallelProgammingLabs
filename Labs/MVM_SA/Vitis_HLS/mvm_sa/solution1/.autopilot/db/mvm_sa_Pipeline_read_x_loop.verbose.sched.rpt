

================================================================
== Vitis HLS Report for 'mvm_sa_Pipeline_read_x_loop'
================================================================
* Date:           Wed Jul  6 15:16:20 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        mvm_sa
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        8|  80.000 ns|  80.000 ns|    8|    8|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- read_x_loop  |        6|        6|         4|          1|          1|     4|       yes|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.23>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 7 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %x_stream_V_last_V, i4 %x_stream_V_strb_V, i4 %x_stream_V_keep_V, i32 %x_stream_V_data_V, void @empty, i32 0, i32 0, void @empty_4, i32 0, i32 0, void @empty_5, void @empty_5, void @empty_5, i32 0, i32 0, i32 0, i32 0, void @empty_5, void @empty_5"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %i_1"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader5"   --->   Operation 10 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = load i3 %i_1" [mvm_sa.cpp:44]   --->   Operation 11 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 12 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.13ns)   --->   "%icmp_ln33 = icmp_eq  i3 %i, i3 4" [mvm_sa.cpp:33]   --->   Operation 13 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.65ns)   --->   "%add_ln33 = add i3 %i, i3 1" [mvm_sa.cpp:33]   --->   Operation 15 'add' 'add_ln33' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln33 = br i1 %icmp_ln33, void %.split11, void %.preheader4.preheader.exitStub" [mvm_sa.cpp:33]   --->   Operation 16 'br' 'br_ln33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_11 = read i41 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A, i32 %x_stream_V_data_V, i4 %x_stream_V_keep_V, i4 %x_stream_V_strb_V, i1 %x_stream_V_last_V"   --->   Operation 17 'read' 'empty_11' <Predicate = (!icmp_ln33)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp = extractvalue i41 %empty_11"   --->   Operation 18 'extractvalue' 'tmp' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.13ns)   --->   "%icmp_ln42 = icmp_eq  i3 %i, i3 0" [mvm_sa.cpp:42]   --->   Operation 19 'icmp' 'icmp_ln42' <Predicate = (!icmp_ln33)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln44 = trunc i3 %i" [mvm_sa.cpp:44]   --->   Operation 20 'trunc' 'trunc_ln44' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0" [mvm_sa.cpp:44]   --->   Operation 21 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_11_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_11" [mvm_sa.cpp:44]   --->   Operation 22 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_11_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_22_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_22" [mvm_sa.cpp:44]   --->   Operation 23 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_22_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_33_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_33" [mvm_sa.cpp:44]   --->   Operation 24 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_33_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.82ns)   --->   "%tmp_3 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0_load, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_11_load, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_22_load, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_33_load, i2 %trunc_ln44" [mvm_sa.cpp:44]   --->   Operation 25 'mux' 'tmp_3' <Predicate = (!icmp_ln33)> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.13ns)   --->   "%icmp_ln42_1 = icmp_eq  i3 %i, i3 1" [mvm_sa.cpp:42]   --->   Operation 26 'icmp' 'icmp_ln42_1' <Predicate = (!icmp_ln33)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1" [mvm_sa.cpp:42]   --->   Operation 27 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.69ns)   --->   "%select_ln42_1 = select i1 %icmp_ln42_1, i32 0, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_load" [mvm_sa.cpp:42]   --->   Operation 28 'select' 'select_ln42_1' <Predicate = (!icmp_ln33)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%store_ln45 = store i32 %select_ln42_1, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1" [mvm_sa.cpp:45]   --->   Operation 29 'store' 'store_ln45' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.13ns)   --->   "%icmp_ln42_2 = icmp_eq  i3 %i, i3 2" [mvm_sa.cpp:42]   --->   Operation 30 'icmp' 'icmp_ln42_2' <Predicate = (!icmp_ln33)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2" [mvm_sa.cpp:42]   --->   Operation 31 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.69ns)   --->   "%select_ln42_2 = select i1 %icmp_ln42_2, i32 0, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_load" [mvm_sa.cpp:42]   --->   Operation 32 'select' 'select_ln42_2' <Predicate = (!icmp_ln33)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%store_ln45 = store i32 %select_ln42_2, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2" [mvm_sa.cpp:45]   --->   Operation 33 'store' 'store_ln45' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.13ns)   --->   "%icmp_ln42_3 = icmp_eq  i3 %i, i3 3" [mvm_sa.cpp:42]   --->   Operation 34 'icmp' 'icmp_ln42_3' <Predicate = (!icmp_ln33)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3" [mvm_sa.cpp:42]   --->   Operation 35 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.69ns)   --->   "%select_ln42_3 = select i1 %icmp_ln42_3, i32 0, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_load" [mvm_sa.cpp:42]   --->   Operation 36 'select' 'select_ln42_3' <Predicate = (!icmp_ln33)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%store_ln45 = store i32 %select_ln42_3, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3" [mvm_sa.cpp:45]   --->   Operation 37 'store' 'store_ln45' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln33 = store i3 %add_ln33, i3 %i_1" [mvm_sa.cpp:33]   --->   Operation 38 'store' 'store_ln33' <Predicate = (!icmp_ln33)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.91>
ST_2 : Operation 39 [2/2] (6.91ns)   --->   "%mul_ln45 = mul i32 %tmp, i32 %tmp_3" [mvm_sa.cpp:45]   --->   Operation 39 'mul' 'mul_ln45' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 40 [1/2] (6.91ns)   --->   "%mul_ln45 = mul i32 %tmp, i32 %tmp_3" [mvm_sa.cpp:45]   --->   Operation 40 'mul' 'mul_ln45' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 47 'ret' 'ret_ln0' <Predicate = (icmp_ln33)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.55>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2"   --->   Operation 41 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_load = load i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc" [mvm_sa.cpp:42]   --->   Operation 42 'load' 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node add_ln45)   --->   "%select_ln42 = select i1 %icmp_ln42, i32 0, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_load" [mvm_sa.cpp:42]   --->   Operation 43 'select' 'select_ln42' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln45 = add i32 %mul_ln45, i32 %select_ln42" [mvm_sa.cpp:45]   --->   Operation 44 'add' 'add_ln45' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%store_ln45 = store i32 %add_ln45, i32 %mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc" [mvm_sa.cpp:45]   --->   Operation 45 'store' 'store_ln45' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader5"   --->   Operation 46 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.24ns
The critical path consists of the following:
	'alloca' operation ('i') [13]  (0 ns)
	'load' operation ('i', mvm_sa.cpp:44) on local variable 'i' [18]  (0 ns)
	'add' operation ('add_ln33', mvm_sa.cpp:33) [22]  (1.65 ns)
	'store' operation ('store_ln33', mvm_sa.cpp:33) of variable 'add_ln33', mvm_sa.cpp:33 on local variable 'i' [52]  (1.59 ns)

 <State 2>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln45', mvm_sa.cpp:45) [37]  (6.91 ns)

 <State 3>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln45', mvm_sa.cpp:45) [37]  (6.91 ns)

 <State 4>: 2.55ns
The critical path consists of the following:
	'load' operation ('mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_load', mvm_sa.cpp:42) on static variable 'mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc' [29]  (0 ns)
	'select' operation ('select_ln42', mvm_sa.cpp:42) [30]  (0 ns)
	'add' operation ('add_ln45', mvm_sa.cpp:45) [38]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
