// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mvm_sa_Loop_read_x_loop_proc1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x_stream_TDATA,
        x_stream_TVALID,
        x_stream_TREADY,
        x_stream_TKEEP,
        x_stream_TSTRB,
        x_stream_TLAST,
        y_stream_TDATA,
        y_stream_TVALID,
        y_stream_TREADY,
        y_stream_TKEEP,
        y_stream_TSTRB,
        y_stream_TLAST
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] x_stream_TDATA;
input   x_stream_TVALID;
output   x_stream_TREADY;
input  [3:0] x_stream_TKEEP;
input  [3:0] x_stream_TSTRB;
input  [0:0] x_stream_TLAST;
output  [31:0] y_stream_TDATA;
output   y_stream_TVALID;
input   y_stream_TREADY;
output  [3:0] y_stream_TKEEP;
output  [3:0] y_stream_TSTRB;
output  [0:0] y_stream_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc;
reg   [31:0] mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1;
reg   [31:0] mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2;
reg   [31:0] mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_done;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_idle;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_ready;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_x_stream_TREADY;
wire   [31:0] grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o_ap_vld;
wire   [31:0] grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o_ap_vld;
wire   [31:0] grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o_ap_vld;
wire   [31:0] grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o;
wire    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o_ap_vld;
wire    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start;
wire    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_done;
wire    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_idle;
wire    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_ready;
wire    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TREADY;
wire   [31:0] grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TDATA;
wire    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID;
wire   [3:0] grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TKEEP;
wire   [3:0] grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TSTRB;
wire   [0:0] grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TLAST;
reg    grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    regslice_both_y_stream_V_data_V_U_apdone_blk;
reg   [6:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    regslice_both_x_stream_V_data_V_U_apdone_blk;
wire   [31:0] x_stream_TDATA_int_regslice;
wire    x_stream_TVALID_int_regslice;
reg    x_stream_TREADY_int_regslice;
wire    regslice_both_x_stream_V_data_V_U_ack_in;
wire    regslice_both_x_stream_V_keep_V_U_apdone_blk;
wire   [3:0] x_stream_TKEEP_int_regslice;
wire    regslice_both_x_stream_V_keep_V_U_vld_out;
wire    regslice_both_x_stream_V_keep_V_U_ack_in;
wire    regslice_both_x_stream_V_strb_V_U_apdone_blk;
wire   [3:0] x_stream_TSTRB_int_regslice;
wire    regslice_both_x_stream_V_strb_V_U_vld_out;
wire    regslice_both_x_stream_V_strb_V_U_ack_in;
wire    regslice_both_x_stream_V_last_V_U_apdone_blk;
wire   [0:0] x_stream_TLAST_int_regslice;
wire    regslice_both_x_stream_V_last_V_U_vld_out;
wire    regslice_both_x_stream_V_last_V_U_ack_in;
wire    y_stream_TVALID_int_regslice;
wire    y_stream_TREADY_int_regslice;
wire    regslice_both_y_stream_V_data_V_U_vld_out;
wire    regslice_both_y_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_y_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_y_stream_V_keep_V_U_vld_out;
wire    regslice_both_y_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_y_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_y_stream_V_strb_V_U_vld_out;
wire    regslice_both_y_stream_V_last_V_U_apdone_blk;
wire    regslice_both_y_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_y_stream_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc = 32'd0;
#0 mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1 = 32'd0;
#0 mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2 = 32'd0;
#0 mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3 = 32'd0;
#0 grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start_reg = 1'b0;
#0 grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start_reg = 1'b0;
end

mvm_sa_Loop_read_x_loop_proc1_Pipeline_read_x_loop grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start),
    .ap_done(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_done),
    .ap_idle(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_idle),
    .ap_ready(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_ready),
    .x_stream_TVALID(x_stream_TVALID_int_regslice),
    .x_stream_TDATA(x_stream_TDATA_int_regslice),
    .x_stream_TREADY(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_x_stream_TREADY),
    .x_stream_TKEEP(x_stream_TKEEP_int_regslice),
    .x_stream_TSTRB(x_stream_TSTRB_int_regslice),
    .x_stream_TLAST(x_stream_TLAST_int_regslice),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_i(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o_ap_vld(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o_ap_vld),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_i(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o_ap_vld(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o_ap_vld),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_i(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o_ap_vld(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o_ap_vld),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_i(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o_ap_vld(grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o_ap_vld)
);

mvm_sa_Loop_read_x_loop_proc1_Pipeline_write_y_loop grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start),
    .ap_done(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_done),
    .ap_idle(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_idle),
    .ap_ready(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_ready),
    .y_stream_TREADY(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TREADY),
    .y_stream_TDATA(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TDATA),
    .y_stream_TVALID(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID),
    .y_stream_TKEEP(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TKEEP),
    .y_stream_TSTRB(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TSTRB),
    .y_stream_TLAST(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TLAST),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2),
    .mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3(mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3)
);

mvm_sa_regslice_both #(
    .DataWidth( 32 ))
regslice_both_x_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(x_stream_TDATA),
    .vld_in(x_stream_TVALID),
    .ack_in(regslice_both_x_stream_V_data_V_U_ack_in),
    .data_out(x_stream_TDATA_int_regslice),
    .vld_out(x_stream_TVALID_int_regslice),
    .ack_out(x_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_x_stream_V_data_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 4 ))
regslice_both_x_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(x_stream_TKEEP),
    .vld_in(x_stream_TVALID),
    .ack_in(regslice_both_x_stream_V_keep_V_U_ack_in),
    .data_out(x_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_x_stream_V_keep_V_U_vld_out),
    .ack_out(x_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_x_stream_V_keep_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 4 ))
regslice_both_x_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(x_stream_TSTRB),
    .vld_in(x_stream_TVALID),
    .ack_in(regslice_both_x_stream_V_strb_V_U_ack_in),
    .data_out(x_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_x_stream_V_strb_V_U_vld_out),
    .ack_out(x_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_x_stream_V_strb_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 1 ))
regslice_both_x_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(x_stream_TLAST),
    .vld_in(x_stream_TVALID),
    .ack_in(regslice_both_x_stream_V_last_V_U_ack_in),
    .data_out(x_stream_TLAST_int_regslice),
    .vld_out(regslice_both_x_stream_V_last_V_U_vld_out),
    .ack_out(x_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_x_stream_V_last_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 32 ))
regslice_both_y_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TDATA),
    .vld_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID),
    .ack_in(y_stream_TREADY_int_regslice),
    .data_out(y_stream_TDATA),
    .vld_out(regslice_both_y_stream_V_data_V_U_vld_out),
    .ack_out(y_stream_TREADY),
    .apdone_blk(regslice_both_y_stream_V_data_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 4 ))
regslice_both_y_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TKEEP),
    .vld_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID),
    .ack_in(regslice_both_y_stream_V_keep_V_U_ack_in_dummy),
    .data_out(y_stream_TKEEP),
    .vld_out(regslice_both_y_stream_V_keep_V_U_vld_out),
    .ack_out(y_stream_TREADY),
    .apdone_blk(regslice_both_y_stream_V_keep_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 4 ))
regslice_both_y_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TSTRB),
    .vld_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID),
    .ack_in(regslice_both_y_stream_V_strb_V_U_ack_in_dummy),
    .data_out(y_stream_TSTRB),
    .vld_out(regslice_both_y_stream_V_strb_V_U_vld_out),
    .ack_out(y_stream_TREADY),
    .apdone_blk(regslice_both_y_stream_V_strb_V_U_apdone_blk)
);

mvm_sa_regslice_both #(
    .DataWidth( 1 ))
regslice_both_y_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TLAST),
    .vld_in(grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID),
    .ack_in(regslice_both_y_stream_V_last_V_U_ack_in_dummy),
    .data_out(y_stream_TLAST),
    .vld_out(regslice_both_y_stream_V_last_V_U_vld_out),
    .ack_out(y_stream_TREADY),
    .apdone_blk(regslice_both_y_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (regslice_both_y_stream_V_data_V_U_apdone_blk == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_ready == 1'b1)) begin
            grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_ready == 1'b1)) begin
            grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc <= grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1 <= grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_1_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2 <= grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_2_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3 <= grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_acc_3_o;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_y_stream_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (regslice_both_y_stream_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (regslice_both_y_stream_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_stream_TREADY_int_regslice = grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_x_stream_TREADY;
    end else begin
        x_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (regslice_both_y_stream_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start = grp_Loop_read_x_loop_proc1_Pipeline_read_x_loop_fu_44_ap_start_reg;

assign grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start = grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_ap_start_reg;

assign grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TREADY = (y_stream_TREADY_int_regslice & ap_CS_fsm_state6);

assign x_stream_TREADY = regslice_both_x_stream_V_data_V_U_ack_in;

assign y_stream_TVALID = regslice_both_y_stream_V_data_V_U_vld_out;

assign y_stream_TVALID_int_regslice = grp_Loop_read_x_loop_proc1_Pipeline_write_y_loop_fu_66_y_stream_TVALID;

endmodule //mvm_sa_Loop_read_x_loop_proc1
