-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mvm_sa is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    A_stream_TVALID : IN STD_LOGIC;
    A_stream_TREADY : OUT STD_LOGIC;
    A_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    A_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    A_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    x_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    x_stream_TVALID : IN STD_LOGIC;
    x_stream_TREADY : OUT STD_LOGIC;
    x_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    x_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    x_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    y_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_stream_TVALID : OUT STD_LOGIC;
    y_stream_TREADY : IN STD_LOGIC;
    y_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of mvm_sa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mvm_sa_mvm_sa,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.923000,HLS_SYN_LAT=15,HLS_SYN_TPT=16,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=933,HLS_SYN_LUT=453,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal A_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_nbreadreq_fu_70_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_reg_220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal x_stream_TDATA_blk_n : STD_LOGIC;
    signal y_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal grp_fu_151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln44_reg_239 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_183_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln44_1_reg_249 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln44_2_reg_259 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_2_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal ap_block_state13 : BOOLEAN;
    signal ap_block_state14 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal regslice_both_y_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state16 : BOOLEAN;
    signal add_ln44_1_fu_209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln44_fu_205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_151_ce : STD_LOGIC;
    signal grp_fu_167_ce : STD_LOGIC;
    signal grp_fu_183_ce : STD_LOGIC;
    signal grp_fu_199_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal regslice_both_A_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal A_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal A_stream_TVALID_int_regslice : STD_LOGIC;
    signal A_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_A_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal A_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_A_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal A_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_A_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal A_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_A_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_x_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal x_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal x_stream_TVALID_int_regslice : STD_LOGIC;
    signal x_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_x_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_x_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal x_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_x_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_x_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_x_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal x_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_x_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_x_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_x_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal x_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_x_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_x_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal y_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal y_stream_TVALID_int_regslice : STD_LOGIC;
    signal y_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_y_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_y_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_y_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_y_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_y_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_y_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_y_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_y_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal y_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_y_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_y_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mvm_sa_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mvm_sa_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    mul_32s_32s_32_2_1_U1 : component mvm_sa_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0,
        din1 => x_stream_TDATA_int_regslice,
        ce => grp_fu_151_ce,
        dout => grp_fu_151_p2);

    mul_32s_32s_32_2_1_U2 : component mvm_sa_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_1,
        din1 => x_stream_TDATA_int_regslice,
        ce => grp_fu_167_ce,
        dout => grp_fu_167_p2);

    mul_32s_32s_32_2_1_U3 : component mvm_sa_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_2,
        din1 => x_stream_TDATA_int_regslice,
        ce => grp_fu_183_ce,
        dout => grp_fu_183_p2);

    mul_32s_32s_32_2_1_U4 : component mvm_sa_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_3,
        din1 => x_stream_TDATA_int_regslice,
        ce => grp_fu_199_ce,
        dout => grp_fu_199_p2);

    regslice_both_A_stream_V_data_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_stream_TDATA,
        vld_in => A_stream_TVALID,
        ack_in => regslice_both_A_stream_V_data_V_U_ack_in,
        data_out => A_stream_TDATA_int_regslice,
        vld_out => A_stream_TVALID_int_regslice,
        ack_out => A_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_A_stream_V_data_V_U_apdone_blk);

    regslice_both_A_stream_V_keep_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_stream_TKEEP,
        vld_in => A_stream_TVALID,
        ack_in => regslice_both_A_stream_V_keep_V_U_ack_in,
        data_out => A_stream_TKEEP_int_regslice,
        vld_out => regslice_both_A_stream_V_keep_V_U_vld_out,
        ack_out => A_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_A_stream_V_keep_V_U_apdone_blk);

    regslice_both_A_stream_V_strb_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_stream_TSTRB,
        vld_in => A_stream_TVALID,
        ack_in => regslice_both_A_stream_V_strb_V_U_ack_in,
        data_out => A_stream_TSTRB_int_regslice,
        vld_out => regslice_both_A_stream_V_strb_V_U_vld_out,
        ack_out => A_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_A_stream_V_strb_V_U_apdone_blk);

    regslice_both_A_stream_V_last_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_stream_TLAST,
        vld_in => A_stream_TVALID,
        ack_in => regslice_both_A_stream_V_last_V_U_ack_in,
        data_out => A_stream_TLAST_int_regslice,
        vld_out => regslice_both_A_stream_V_last_V_U_vld_out,
        ack_out => A_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_A_stream_V_last_V_U_apdone_blk);

    regslice_both_x_stream_V_data_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => x_stream_TDATA,
        vld_in => x_stream_TVALID,
        ack_in => regslice_both_x_stream_V_data_V_U_ack_in,
        data_out => x_stream_TDATA_int_regslice,
        vld_out => x_stream_TVALID_int_regslice,
        ack_out => x_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_x_stream_V_data_V_U_apdone_blk);

    regslice_both_x_stream_V_keep_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => x_stream_TKEEP,
        vld_in => x_stream_TVALID,
        ack_in => regslice_both_x_stream_V_keep_V_U_ack_in,
        data_out => x_stream_TKEEP_int_regslice,
        vld_out => regslice_both_x_stream_V_keep_V_U_vld_out,
        ack_out => x_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_x_stream_V_keep_V_U_apdone_blk);

    regslice_both_x_stream_V_strb_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => x_stream_TSTRB,
        vld_in => x_stream_TVALID,
        ack_in => regslice_both_x_stream_V_strb_V_U_ack_in,
        data_out => x_stream_TSTRB_int_regslice,
        vld_out => regslice_both_x_stream_V_strb_V_U_vld_out,
        ack_out => x_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_x_stream_V_strb_V_U_apdone_blk);

    regslice_both_x_stream_V_last_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => x_stream_TLAST,
        vld_in => x_stream_TVALID,
        ack_in => regslice_both_x_stream_V_last_V_U_ack_in,
        data_out => x_stream_TLAST_int_regslice,
        vld_out => regslice_both_x_stream_V_last_V_U_vld_out,
        ack_out => x_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_x_stream_V_last_V_U_apdone_blk);

    regslice_both_y_stream_V_data_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => y_stream_TDATA_int_regslice,
        vld_in => y_stream_TVALID_int_regslice,
        ack_in => y_stream_TREADY_int_regslice,
        data_out => y_stream_TDATA,
        vld_out => regslice_both_y_stream_V_data_V_U_vld_out,
        ack_out => y_stream_TREADY,
        apdone_blk => regslice_both_y_stream_V_data_V_U_apdone_blk);

    regslice_both_y_stream_V_keep_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => y_stream_TVALID_int_regslice,
        ack_in => regslice_both_y_stream_V_keep_V_U_ack_in_dummy,
        data_out => y_stream_TKEEP,
        vld_out => regslice_both_y_stream_V_keep_V_U_vld_out,
        ack_out => y_stream_TREADY,
        apdone_blk => regslice_both_y_stream_V_keep_V_U_apdone_blk);

    regslice_both_y_stream_V_strb_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => y_stream_TVALID_int_regslice,
        ack_in => regslice_both_y_stream_V_strb_V_U_ack_in_dummy,
        data_out => y_stream_TSTRB,
        vld_out => regslice_both_y_stream_V_strb_V_U_vld_out,
        ack_out => y_stream_TREADY,
        apdone_blk => regslice_both_y_stream_V_strb_V_U_apdone_blk);

    regslice_both_y_stream_V_last_V_U : component mvm_sa_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => y_stream_TLAST_int_regslice,
        vld_in => y_stream_TVALID_int_regslice,
        ack_in => regslice_both_y_stream_V_last_V_U_ack_in_dummy,
        data_out => y_stream_TLAST,
        vld_out => regslice_both_y_stream_V_last_V_U_vld_out,
        ack_out => y_stream_TREADY,
        apdone_blk => regslice_both_y_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                last_reg_229 <= grp_fu_151_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                mul_ln44_1_reg_249 <= grp_fu_183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                mul_ln44_2_reg_259 <= grp_fu_199_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                mul_ln44_reg_239 <= grp_fu_167_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_0 <= A_stream_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_1 <= A_stream_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_2 <= A_stream_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                mvm_sa_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_stream_axis_int_0ul_0ul_0ul_0_A_local_3 <= A_stream_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                tmp_reg_220 <= tmp_nbreadreq_fu_70_p6;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, tmp_nbreadreq_fu_70_p6, ap_CS_fsm_state2, tmp_reg_220, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_block_state7_io, ap_block_state8_io, ap_block_state9_io, ap_block_state10_io, ap_block_state11_io, regslice_both_y_stream_V_data_V_U_apdone_blk, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((ap_const_boolean_1 = ap_block_state7_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((ap_const_boolean_1 = ap_block_state8_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((ap_const_boolean_1 = ap_block_state9_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((ap_const_boolean_1 = ap_block_state10_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((ap_const_boolean_1 = ap_block_state11_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if ((not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if ((not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((regslice_both_y_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, tmp_nbreadreq_fu_70_p6, ap_CS_fsm_state2, tmp_reg_220, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, A_stream_TVALID_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            A_stream_TDATA_blk_n <= A_stream_TVALID_int_regslice;
        else 
            A_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    A_stream_TREADY <= regslice_both_A_stream_V_data_V_U_ack_in;

    A_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, tmp_nbreadreq_fu_70_p6, ap_CS_fsm_state2, tmp_reg_220, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_block_state7_io, ap_block_state8_io, ap_block_state9_io, ap_block_state10_io, ap_block_state11_io, regslice_both_y_stream_V_data_V_U_apdone_blk, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state11_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((ap_const_boolean_1 = ap_block_state10_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((ap_const_boolean_1 = ap_block_state9_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((ap_const_boolean_1 = ap_block_state8_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((ap_const_boolean_1 = ap_block_state7_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((regslice_both_y_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)))) and (tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            A_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            A_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    add_ln44_1_fu_209_p2 <= std_logic_vector(unsigned(mul_ln44_1_reg_249) + unsigned(mul_ln44_2_reg_259));
    add_ln44_fu_205_p2 <= std_logic_vector(unsigned(mul_ln44_reg_239) + unsigned(last_reg_229));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(tmp_reg_220, ap_block_state10_io, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state10_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(tmp_reg_220, ap_block_state11_io, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state11_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
        if (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
        if (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
        if (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
        if (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(tmp_reg_220, regslice_both_y_stream_V_data_V_U_apdone_blk, A_stream_TVALID_int_regslice)
    begin
        if (((regslice_both_y_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)))) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(tmp_nbreadreq_fu_70_p6, A_stream_TVALID_int_regslice)
    begin
        if (((tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
        if (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(tmp_reg_220, ap_block_state7_io, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state7_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(tmp_reg_220, ap_block_state8_io, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state8_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(tmp_reg_220, ap_block_state9_io, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state9_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(tmp_nbreadreq_fu_70_p6, A_stream_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((tmp_nbreadreq_fu_70_p6 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice));
    end process;


    ap_block_state10_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
                ap_block_state10 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state10_io_assign_proc : process(tmp_reg_220, y_stream_TREADY_int_regslice)
    begin
                ap_block_state10_io <= ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state11_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
                ap_block_state11 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state11_io_assign_proc : process(tmp_reg_220, y_stream_TREADY_int_regslice)
    begin
                ap_block_state11_io <= ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state12_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
                ap_block_state12 <= ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice));
    end process;


    ap_block_state13_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
                ap_block_state13 <= ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice));
    end process;


    ap_block_state14_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
                ap_block_state14 <= ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice));
    end process;


    ap_block_state15_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
                ap_block_state15 <= ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice));
    end process;


    ap_block_state16_assign_proc : process(tmp_reg_220, regslice_both_y_stream_V_data_V_U_apdone_blk, A_stream_TVALID_int_regslice)
    begin
                ap_block_state16 <= ((regslice_both_y_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)));
    end process;


    ap_block_state2_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
                ap_block_state2 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
                ap_block_state3 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state4_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
                ap_block_state4 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state5_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
                ap_block_state5 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state6_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice)
    begin
                ap_block_state6 <= ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice));
    end process;


    ap_block_state7_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
                ap_block_state7 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state7_io_assign_proc : process(tmp_reg_220, y_stream_TREADY_int_regslice)
    begin
                ap_block_state7_io <= ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
                ap_block_state8 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state8_io_assign_proc : process(tmp_reg_220, y_stream_TREADY_int_regslice)
    begin
                ap_block_state8_io <= ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(tmp_reg_220, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
                ap_block_state9 <= (((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state9_io_assign_proc : process(tmp_reg_220, y_stream_TREADY_int_regslice)
    begin
                ap_block_state9_io <= ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_fu_151_ce_assign_proc : process(ap_CS_fsm_state2, tmp_reg_220, ap_CS_fsm_state3, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_151_ce <= ap_const_logic_1;
        else 
            grp_fu_151_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_167_ce_assign_proc : process(tmp_reg_220, ap_CS_fsm_state3, ap_CS_fsm_state4, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_167_ce <= ap_const_logic_1;
        else 
            grp_fu_167_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_183_ce_assign_proc : process(tmp_reg_220, ap_CS_fsm_state4, ap_CS_fsm_state5, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_fu_183_ce <= ap_const_logic_1;
        else 
            grp_fu_183_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_199_ce_assign_proc : process(tmp_reg_220, ap_CS_fsm_state5, ap_CS_fsm_state6, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_fu_199_ce <= ap_const_logic_1;
        else 
            grp_fu_199_ce <= ap_const_logic_0;
        end if; 
    end process;

    last_2_fu_213_p2 <= std_logic_vector(unsigned(add_ln44_1_fu_209_p2) + unsigned(add_ln44_fu_205_p2));
    tmp_nbreadreq_fu_70_p6 <= (0=>(A_stream_TVALID_int_regslice), others=>'-');

    x_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, tmp_reg_220, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, x_stream_TVALID_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            x_stream_TDATA_blk_n <= x_stream_TVALID_int_regslice;
        else 
            x_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    x_stream_TREADY <= regslice_both_x_stream_V_data_V_U_ack_in;

    x_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state2, tmp_reg_220, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, A_stream_TVALID_int_regslice, x_stream_TVALID_int_regslice)
    begin
        if (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (x_stream_TVALID_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            x_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            x_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    y_stream_TDATA_blk_n_assign_proc : process(tmp_reg_220, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, y_stream_TREADY_int_regslice)
    begin
        if ((((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            y_stream_TDATA_blk_n <= y_stream_TREADY_int_regslice;
        else 
            y_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_stream_TDATA_int_regslice_assign_proc : process(tmp_reg_220, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, last_2_fu_213_p2, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            y_stream_TDATA_int_regslice <= ap_const_lv32_0;
        elsif ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            y_stream_TDATA_int_regslice <= last_2_fu_213_p2;
        else 
            y_stream_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_stream_TLAST_int_regslice_assign_proc : process(tmp_reg_220, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if ((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            y_stream_TLAST_int_regslice <= ap_const_lv1_1;
        elsif (((not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not((((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            y_stream_TLAST_int_regslice <= ap_const_lv1_0;
        else 
            y_stream_TLAST_int_regslice <= "X";
        end if; 
    end process;

    y_stream_TVALID <= regslice_both_y_stream_V_data_V_U_vld_out;

    y_stream_TVALID_int_regslice_assign_proc : process(tmp_reg_220, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_block_state7_io, ap_block_state8_io, ap_block_state9_io, ap_block_state10_io, A_stream_TVALID_int_regslice, y_stream_TREADY_int_regslice)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state10_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((ap_const_boolean_1 = ap_block_state9_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((ap_const_boolean_1 = ap_block_state8_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((ap_const_boolean_1 = ap_block_state7_io) or ((tmp_reg_220 = ap_const_lv1_1) and (ap_const_logic_0 = A_stream_TVALID_int_regslice)) or ((tmp_reg_220 = ap_const_lv1_0) and (y_stream_TREADY_int_regslice = ap_const_logic_0)))) and (tmp_reg_220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            y_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            y_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

end behav;
